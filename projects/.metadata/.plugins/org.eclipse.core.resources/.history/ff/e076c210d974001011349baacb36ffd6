package main;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

public class MultiThread extends Thread{
	
	private Socket socket;
	
	public void communication(Socket socket){
		
		this.socket= socket;
		this.start();
	}
	
	
	 @Override
     public void run()
	{
		
		java.io.InputStream in;
		try {
			in = socket.getInputStream();
			DataInputStream input = new DataInputStream(socket.getInputStream());
	
		BufferedReader inFromClient =new BufferedReader(new InputStreamReader(in));
		//DataOutputStream outToClient = new DataOutputStream(socket.getOutputStream());
		PrintWriter out = new PrintWriter(socket.getOutputStream(), true);

		
		//get filename
		//String fileName = inFromClient.readLine();
		String fileName = getReceivedText(input);
		System.out.println("Filename: "+fileName);
		
		
		//sending ACK
		//outToClient.writeBytes("ACK\r\n");
		out.print("ACK\r\n");
        out.flush();
		
        BufferedInputStream bis = new BufferedInputStream(socket.getInputStream());
        BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream("/home/kozenym/Desktop/key_1.txt"));
        byte [] receivedData = new byte[1024];		
		int num = 0;
        while ( (num = bis.read(receivedData)) > 0){
            bos.write(receivedData,0,num);
          }
          //System.out.println(counter);
          bos.close();
          bis.close();

          //File receivedFile = new File(filename);


/*		FileOutputStream fos = new FileOutputStream(new File("/home/kozenym/Desktop/key_1.txt"));
		
		byte [] buffer = new byte[1024];		
		int read = 0;	
        while( (read = in.read(buffer)) != -1){
        	
        	fos.write(buffer, 0, read);
        }
*/        System.out.println("File received");
        
        
        //sending ACK
		//outToClient.writeBytes("ACK\r\n");
        out.print("ACK\r\n");
        out.flush();
		
		/*//get encryptedHash
		String encryptedHash = inFromClient.readLine();
		//getKey();
		//String hash = RSAEncryptUtil.decrypt(encryptedHash, publicKey);
		System.out.println("Received hash: "+encryptedHash);
		
		//sending ACK
		outToClient.writeBytes("ACK\r\n");*/
		
        //fos.close();
        input.close();
        inFromClient.close();
        out.close();
        //outToClient.close();
        
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
	 
	 private String getReceivedText(InputStream in) throws IOException
	 {
		 char znak;
		 StringBuffer fromServer = new StringBuffer();
         while ((znak = (char)in.read()) != -1)
             {
                 fromServer.append(znak);
                 if (fromServer.toString().endsWith("\r\n"))
                	 break;
                 
             }
         return fromServer.substring(0, fromServer.length()-2).toString();
	 }
}
