package main;

public class Main {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		Complex c1 = new Complex(0, 1/Math.sqrt(2.0));
		Complex c2 = new Complex(1/Math.sqrt(2.0), 0);
		Vector s = new Vector(c1, c2);
		Vector m1 = new Vector(new Complex(0, 0), new Complex(1, 0));
		Vector m2 = new Vector(new Complex(0, 0), new Complex(1, 0));
		System.out.println("|s>=(1/sqrt{2})(i,1) is unit vector: "+s.isUnitVector());
		System.out.println("Are vectors |m^(1)> = (0,1); |m^(2)> = (0,1) orthonormal: "+m1.isOrthonormal(m2));
		System.out.println("Probability of |m^(1)> = (0,1) outcome: "+m1.probabilityOfOutcome(s));
		System.out.println("Probability of |m^(2)> = (0,1) outcome: "+m2.probabilityOfOutcome(s));
		
		System.out.println();
		System.out.println();
		
		s = new Vector(new Complex(1/Math.sqrt(2.0), 0), new Complex(0, 1/Math.sqrt(2.0)));
		m1 = new Vector(new Complex(Math.cos(Math.toDegrees(2)), 0), new Complex(Math.sin(Math.toDegrees(2)), 0));
		m2 = new Vector(new Complex(-Math.sin(Math.toDegrees(2)), 0), new Complex(Math.cos(Math.toDegrees(2)), 0));
		System.out.println("|s>=(1/sqrt{2})(1,-i) is unit vector: "+s.isUnitVector());
		System.out.println("Are vectors |m^(1)> = (cos 2,sin 2); |m^(2)> = (-sin 2,cos 2) othogonal: "+m1.isZeroInnerProduct(m2));
		System.out.println("Probability of |m^(1)> = (cos 2,sin 2) outcome: "+m1.probabilityOfOutcome(s));
		System.out.println("Probability of |m^(2)> = (-sin 2,cos 2) outcome: "+m2.probabilityOfOutcome(s));
		
		System.out.println();
		System.out.println();
		
		c1 = new Complex(1,0);
		c2 = new Complex(0,-1);
		s = new Vector(c1, c2);
		m1 = new Vector(new Complex(Math.cos(2), 0), new Complex(Math.sin(2), 0));
		m2 = new Vector(new Complex(-Math.sin(2), 0), new Complex(Math.cos(2), 0));
		System.out.println("|s>=(1/sqrt{2})(1,-i) is unit vector: "+s.isUnitVector());
		System.out.println("Are vectors othogonal: "+m1.isZeroInnerProduct(m2));
		System.out.println("Probability of l1 outcome: "+m1.probabilityOfOutcome(s));
		System.out.println("Probability of l2 outcome: "+m2.probabilityOfOutcome(s));
		
		System.out.println();
		System.out.println();
		
		
		m1 = new Vector(new Complex(1/Math.sqrt(2.0), 0), new Complex(0, 1/Math.sqrt(2.0)));
		m2 = new Vector(new Complex(1/Math.sqrt(2.0), 0), new Complex(0, -1/Math.sqrt(2.0)));
		System.out.println("Are vectors othogonal: "+m1.isZeroInnerProduct(m2));
	}
	
	public static void measurement(Vector s, Vector m1, Vector m2)
	{
		System.out.println("|s> is unit vector: "+s.isUnitVector());
		boolean isOrthonormal = m1.isOrthonormal(m2);
		System.out.println("Are vectors |m^(1)> = (0,1); |m^(2)> = (0,1) orthonormal: "+isOrthonormal);
		if(isOrthonormal)
		{
			System.out.println("Probability of |m^(1)> outcome: "+m1.probabilityOfOutcome(s));
			System.out.println("Probability of |m^(2)> outcome: "+m2.probabilityOfOutcome(s));
		}
		else
		{
			System.out.println("Beacause |m^(1)> and |m^(2)> are not orthonormal, we do not calculate probabilities.");
		}
	}

}
